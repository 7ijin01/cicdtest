name: Deploy To EC2

on:
  push:
    branches:
      - main


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: GitHub repo 불러오기
        uses: actions/checkout@v4
      - name: Jdk 21버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: application.yml 만들기
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: 실행 권한 부여
        run: chmod +x ./gradlew

      - name: 테스트 및 빌드
        run: ./gradlew clean build


      - name: 빌드명 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: 압축하기
        run: tar -czvf $GITHUB_SHA.tar.gz project.jar appspec.yml scripts

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: S3에 프로젝트 폴더 업로드하기
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://instagram-server-gijin/$GITHUB_SHA.tar.gz

      - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
        run: aws deploy create-deployment
          --application-name instagram-server
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name Production
          --s3-location bucket=instagram-server-gijin,bundleType=tgz,key=$GITHUB_SHA.tar.gz



#
#
#      - name: SCP로 EC2에 빌드 파일 전송
#        uses: appleboy/scp-action@v0.1.7
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_PRIVATE_KEY }}
#          source: project.jar #이 파일을 전송
#          target: /home/ubuntu/instagram-server/tobe
#
#      - name: SSH로 EC2에 접속하기
#        uses: appleboy/ssh-action@v1.0.3
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_PRIVATE_KEY }}
#          script_stop: true
#          script: |
#            rm -rf /home/ubuntu/instagram-server/current
#            mkdir /home/ubuntu/instagram-server/current
#            mv /home/ubuntu/instagram-server/tobe/project.jar /home/ubuntu/instagram-server/current/project.jar
#            cd /home/ubuntu/instagram-server/current
#            sudo fuser -k -n tcp 8080 || true
#            nohup java -jar project.jar > ./output.log 2>&1 &
#            rm -rf /home/ubuntu/instagram-server/tobe