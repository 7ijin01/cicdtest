#name: Deploy To EC2
#
#on:
#  push:
#    branches:
#      - main
#
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Github Repository에 올린 파일들을 불러오기
#        uses: actions/checkout@v4
#
#      - name: Test
#        run: |
#          ls
#          pwd
#
#      - name: JDK 21버전 설치
#        uses: actions/setup-java@v4
#        with:
#          distribution: temurin
#          java-version: 21
#
#      - name: application.yml 파일 만들기
#        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml
#
#      - name: 테스트 및 빌드하기
#        run: |
#          chmod +x ./gradlew
#          ./gradlew clean build
#
#
#      - name: 빌드된 파일 이름 변경하기
#        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar
#      - name: SCP로 EC2에 빌드된 파일 전송하기
#        uses: appleboy/scp-action@v0.1.7
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_PRIVATE_KEY }}
#          source: project.jar
#          target: /home/ubuntu/cicdtest/tobe
#
#
#      - name: SSH로 EC2에 접속하기
#        uses: appleboy/ssh-action@v1.0.3
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_PRIVATE_KEY }}
#          script_stop: true
#          script: |
#            rm -rf /home/ubuntu/cicdtest/current
#             mkdir /home/ubuntu/cicdtest/current
#             mv /home/ubuntu/cicdtest/tobe/project.jar /home/ubuntu/cicdtest/current/project.jar
#             cd /home/ubuntu/cicdtest/current
#             sudo fuser -k -n tcp 8080 || true
#             nohup java -jar project.jar > ./output.log 2>&1 &
#             rm -rf /home/ubuntu/cicdtest/tobe
#
#

name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        env:
          APPLICATION_PROPERTIES: ${{ secrets.APPLICATION_PROPERTIES }}
        with:
          host: ${{ secrets.EC2_HOST }} # EC2의 주소
          username: ${{ secrets.EC2_USERNAME }} # EC2 접속 username
          key: ${{ secrets.EC2_PRIVATE_KEY }} # EC2의 Key 파일의 내부 텍스트
          envs: APPLICATION_PROPERTIES
          script_stop: true # 아래 script 중 실패하는 명령이 하나라도 있으면 실패로 처리
          script: |
            cd /home/ubuntu/cicdtest # 여기 경로는 자신의 EC2에 맞는 경로로 재작성하기
            rm -rf src/main/resources/application.yml
            git pull origin main
            echo "$APPLICATION_PROPERTIES" > src/main/resources/application.yml
            ./gradlew clean build
            sudo fuser -k -n tcp 8080 || true # || true를 붙인 이유는 8080에 종료시킬 프로세스가 없더라도 실패로 처리하지 않기 위해서이다. 
            # jar 파일을 실행시키는 명령어이다. 그리고 발생하는 로그들을 ./output.log 파일에 남기는 명령어이다.
            nohup java -jar build/libs/*SNAPSHOT.jar > ./output.log 2>&1 &